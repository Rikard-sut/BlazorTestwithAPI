@page "/realestates"
@using System.Net.Http.Json;
@inject HttpClient Http

<h3>RealEstates</h3>

@if (realEstates == null)
{
    <p>Loading.....</p>
}
else
{
<div class="container">
    <div class="row">
        @foreach (var estate in realEstates)
        {
            <div class="card text-center m-4">
                <div class="card-header">
                    @if (estate.CanBeSold)
                    {<p>For Sale</p> }
                    else
                    { <p>For rent</p>}
                </div>
                <div class="card-body">
                    <h5 class="card-title">@estate.Title</h5>
                    @if (estate.CanBeSold)
                    {
                        <p class="card-body">Selling price: @estate.SellingPrice</p>
                    }
                    else
                    {
                        <p class="card-body">Renting price : @estate.RentingPrice per month</p>
                    }
                    <NavLink href="@($"realestate/{estate.Id}")" class="btn btn-primary">More Info</NavLink>
                </div>
            </div>

        }
    </div>
</div>
}

@code {

    private RealEstate[] realEstates;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            realEstates = await Http.GetFromJsonAsync<RealEstate[]>("api/RealEstates?skip=2&take=5");
        }
        catch (HttpRequestException)
        {
            Console.WriteLine("An error Occured");
        }
        catch (NotSupportedException)
        {
            Console.WriteLine("Content type is not supported");
        }
        catch (System.Text.Json.JsonException)
        {
            Console.WriteLine("Invalid Json");
        }
    }

    public class RealEstate
    {
        public int Id { get; set; }
        public string Title { get; set; }
        public int SellingPrice { get; set; }
        public int RentingPrice { get; set; }
        public bool CanBeSold { get; set; }
        public bool CanBeRented { get; set; }
    }

}
